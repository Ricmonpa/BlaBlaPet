import SignalAnalysisService from '../src/services/signalAnalysisService.js';

// Descripci√≥n de alegr√≠a
const joyDescription = {
  postura: "El perro est√° erguido, con el cuerpo relajado",
  cola: "La cola est√° movi√©ndose en c√≠rculos amplios con entusiasmo",
  orejas: "Las orejas est√°n erguidas hacia adelante, mostrando atenci√≥n",
  ojos: "Los ojos est√°n brillantes y felices",
  boca: "La boca est√° abierta, mostrando la lengua con alegr√≠a",
  movimientos: "El perro est√° saltando y movi√©ndose con energ√≠a",
  sonidos: "No se observan sonidos visibles"
};

async function debugJoy() {
  console.log('üîç Debug: Analizando coincidencias para alegr√≠a...\n');
  
  const signalService = new SignalAnalysisService();
  
  // Esperar a que se carguen los datos
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  console.log('üìã Descripci√≥n de Alegr√≠a:');
  console.log(JSON.stringify(joyDescription, null, 2));
  
  // Debug: Ver qu√© se√±ales se encuentran
  console.log('\nüîç Buscando se√±ales que coincidan...');
  
  try {
    // Llamar directamente a la funci√≥n de b√∫squeda
    const matchedSignals = signalService.findMatchingSignals(joyDescription);
    
    console.log('\nüìä Se√±ales encontradas:', matchedSignals.length);
    
    // Mostrar todas las se√±ales encontradas
    matchedSignals.forEach((signal, index) => {
      console.log(`\n--- Se√±al ${index + 1} ---`);
      console.log('Se√±al:', signal.senal);
      console.log('Descripci√≥n:', signal.descripcion);
      console.log('Emoci√≥n probable:', signal.emocion_probable);
      console.log('Interpretaci√≥n:', signal.interpretacion_priorizada);
      console.log('Puntuaci√≥n:', signal.matchScore);
      console.log('Bonus de juego:', signal.gameBonus || 1);
    });
    
    // Debug: Ver el conglomerado
    console.log('\nüîç Calculando conglomerado...');
    const conglomerate = signalService.calculateConglomerate(matchedSignals);
    
    console.log('\nüìä Resultado del conglomerado:');
    console.log('Emoci√≥n dominante:', conglomerate.dominantEmotion?.emotion);
    console.log('Se√±ales dominantes:', conglomerate.dominantEmotion?.signals?.length || 0);
    console.log('Puntuaci√≥n total:', conglomerate.dominantEmotion?.score || 0);
    
  } catch (error) {
    console.error('‚ùå Error en debug:', error);
  }
}

// Ejecutar debug
debugJoy().catch(console.error);
