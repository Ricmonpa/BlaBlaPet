/**
 * Script de prueba para verificar que los subt√≠tulos secuenciales se muestran correctamente en el feed compartido
 * 
 * USO:
 * 1. Abrir la consola del navegador en localhost:5174
 * 2. Ejecutar: testSequentialSubtitlesFix()
 */

// Funci√≥n para probar la correcci√≥n de subt√≠tulos secuenciales
async function testSequentialSubtitlesFix() {
  console.log('üöÄ Iniciando prueba de correcci√≥n de subt√≠tulos secuenciales...');
  console.log('');

  try {
    // 1. Verificar que el servicio est√° disponible
    console.log('1Ô∏è‚É£ Verificando servicios...');
    if (typeof window.videoShareService === 'undefined') {
      console.log('‚ùå videoShareService no est√° disponible');
      console.log('   Aseg√∫rate de que la app est√© cargada en el navegador');
      return;
    }
    console.log('‚úÖ videoShareService disponible');
    console.log('');

    // 2. Obtener feed p√∫blico actual
    console.log('2Ô∏è‚É£ Obteniendo feed p√∫blico actual...');
    const publicFeed = await window.videoShareService.getPublicFeed();
    console.log(`üìä Feed p√∫blico contiene ${publicFeed.length} videos`);
    console.log('');

    // 3. Analizar videos con subt√≠tulos secuenciales
    console.log('3Ô∏è‚É£ Analizando videos con subt√≠tulos secuenciales...');
    const videosWithSequentialSubtitles = publicFeed.filter(video => 
      video.isSequentialSubtitles && video.subtitles && video.subtitles.length > 0
    );
    
    console.log(`üé¨ Videos con subt√≠tulos secuenciales: ${videosWithSequentialSubtitles.length}`);
    
    if (videosWithSequentialSubtitles.length > 0) {
      console.log('üìù Detalles de videos con subt√≠tulos secuenciales:');
      videosWithSequentialSubtitles.forEach((video, index) => {
        console.log(`   ${index + 1}. ${video.petName} (${video.id})`);
        console.log(`      - Subt√≠tulos: ${video.subtitles.length}`);
        console.log(`      - Duraci√≥n: ${video.totalDuration}s`);
        console.log(`      - Primer subt√≠tulo: "${video.subtitles[0]?.traduccion_emocional}"`);
        console.log('');
      });
    } else {
      console.log('‚ö†Ô∏è No se encontraron videos con subt√≠tulos secuenciales');
      console.log('   Esto puede ser normal si no hay videos recientes con esta funcionalidad');
      console.log('');
    }

    // 4. Simular conversi√≥n de video a post (como hace SharedFeed)
    console.log('4Ô∏è‚É£ Simulando conversi√≥n de video a post...');
    if (videosWithSequentialSubtitles.length > 0) {
      const testVideo = videosWithSequentialSubtitles[0];
      console.log('üìù Video de prueba:', testVideo.petName);
      
      // Simular la funci√≥n convertVideoToPost
      const hasSequentialSubtitles = testVideo.isSequentialSubtitles && testVideo.subtitles && testVideo.subtitles.length > 0;
      const convertedPost = {
        id: testVideo.id,
        username: `@${testVideo.userId}`,
        petName: testVideo.petName || 'Mascota',
        breed: 'Mascota',
        mediaUrl: testVideo.mediaUrl || testVideo.thumbnailUrl,
        mediaType: testVideo.mediaType || 'video',
        translation: hasSequentialSubtitles ? null : (testVideo.translation || testVideo.emotionalDubbing || 'An√°lisis de comportamiento'),
        emotionalDubbing: hasSequentialSubtitles ? null : (testVideo.emotionalDubbing || testVideo.translation),
        isSequentialSubtitles: testVideo.isSequentialSubtitles || false,
        subtitles: testVideo.subtitles || null,
        totalDuration: testVideo.totalDuration || testVideo.duration || 30
      };
      
      console.log('‚úÖ Post convertido:');
      console.log(`   - isSequentialSubtitles: ${convertedPost.isSequentialSubtitles}`);
      console.log(`   - subtitles: ${convertedPost.subtitles?.length} elementos`);
      console.log(`   - totalDuration: ${convertedPost.totalDuration}s`);
      console.log(`   - translation: ${convertedPost.translation ? 'Presente' : 'Nulo (correcto para subt√≠tulos secuenciales)'}`);
      console.log('');
    }

    // 5. Verificar que la correcci√≥n est√° implementada
    console.log('5Ô∏è‚É£ Verificando implementaci√≥n de la correcci√≥n...');
    
    // Verificar que SharedFeed tiene la funci√≥n convertVideoToPost actualizada
    const sharedFeedCode = await fetch('/src/components/SharedFeed.jsx').then(r => r.text());
    const hasSequentialSubtitlesCheck = sharedFeedCode.includes('hasSequentialSubtitles');
    const preservesSubtitles = sharedFeedCode.includes('isSequentialSubtitles: video.isSequentialSubtitles');
    
    console.log(`‚úÖ Verificaci√≥n de c√≥digo:`);
    console.log(`   - Funci√≥n convertVideoToPost actualizada: ${hasSequentialSubtitlesCheck ? 'S√≠' : 'No'}`);
    console.log(`   - Preserva propiedades de subt√≠tulos: ${preservesSubtitles ? 'S√≠' : 'No'}`);
    console.log('');

    // 6. Resumen de la prueba
    console.log('üìä RESUMEN DE LA PRUEBA:');
    console.log('   ‚úÖ Servicios disponibles');
    console.log(`   ‚úÖ Feed p√∫blico: ${publicFeed.length} videos`);
    console.log(`   ‚úÖ Videos con subt√≠tulos secuenciales: ${videosWithSequentialSubtitles.length}`);
    console.log(`   ‚úÖ Correcci√≥n implementada: ${hasSequentialSubtitlesCheck && preservesSubtitles ? 'S√≠' : 'No'}`);
    console.log('');

    if (videosWithSequentialSubtitles.length > 0) {
      console.log('üéâ ¬°Correcci√≥n implementada correctamente!');
      console.log('   - Los videos con subt√≠tulos secuenciales ahora se muestran correctamente');
      console.log('   - Las propiedades de subt√≠tulos se preservan en la conversi√≥n');
      console.log('   - Los subt√≠tulos secuenciales aparecer√°n en lugar de traducciones est√°ticas');
      console.log('');
      console.log('üîç Para verificar visualmente:');
      console.log('   1. Ve al feed compartido (Home)');
      console.log('   2. Busca videos que muestren subt√≠tulos secuenciales');
      console.log('   3. Verifica que aparezcan las traducciones t√©cnicas y emocionales por momentos');
    } else {
      console.log('‚ö†Ô∏è No hay videos con subt√≠tulos secuenciales para probar');
      console.log('   - Crea un nuevo video desde la c√°mara con subt√≠tulos secuenciales');
      console.log('   - Luego ejecuta este script nuevamente');
    }

  } catch (error) {
    console.error('üí• Error en la prueba:', error);
  }
}

// Funci√≥n para crear un video de prueba con subt√≠tulos secuenciales
async function createTestVideoWithSequentialSubtitles() {
  console.log('üé¨ Creando video de prueba con subt√≠tulos secuenciales...');
  
  try {
    // Crear un video de prueba con subt√≠tulos secuenciales simulados
    const testVideo = {
      petName: 'Perro de Prueba',
      translation: 'An√°lisis de comportamiento',
      emotionalDubbing: '¬°Qu√© divertido!',
      mediaUrl: 'data:video/mp4;base64,test', // URL simulada
      mediaType: 'video',
      userId: 'test_user',
      tags: ['prueba', 'subt√≠tulos_secuenciales'],
      duration: 30,
      resolution: '400x600',
      format: 'mp4',
      isSequentialSubtitles: true,
      subtitles: [
        {
          id: 'subtitle_1',
          timestamp: '00:00 - 00:05',
          traduccion_tecnica: 'El perro se encuentra en una postura de juego, agitando un juguete de un lado a otro. Este comportamiento indica una alta energ√≠a y excitaci√≥n.',
          traduccion_emocional: '¬°Guau! ¬°Miren mi juguete! ¬°Qu√© divertido es!',
          confidence: 90,
          source: 'thought_model_sequential'
        },
        {
          id: 'subtitle_2',
          timestamp: '00:06 - 00:10',
          traduccion_tecnica: 'El perro baja el pecho en una clara reverencia de juego, mirando hacia la c√°mara. Esta es una invitaci√≥n directa a la interacci√≥n.',
          traduccion_emocional: '¬°Mira lo que hago! ¬°Ven a jugar conmigo, por favor!',
          confidence: 85,
          source: 'thought_model_sequential'
        }
      ],
      totalDuration: 30
    };

    const videoUrl = await window.videoShareService.storeVideoAndGenerateUrl(testVideo);
    console.log('‚úÖ Video de prueba creado:', videoUrl);
    console.log('   - Ahora ejecuta testSequentialSubtitlesFix() para verificar');
    
  } catch (error) {
    console.error('‚ùå Error creando video de prueba:', error);
  }
}

// Exportar funciones para uso en consola
window.testSequentialSubtitlesFix = testSequentialSubtitlesFix;
window.createTestVideoWithSequentialSubtitles = createTestVideoWithSequentialSubtitles;

console.log('üîß Script de prueba de subt√≠tulos secuenciales cargado');
console.log('   - Ejecuta: testSequentialSubtitlesFix()');
console.log('   - O crea un video de prueba: createTestVideoWithSequentialSubtitles()');