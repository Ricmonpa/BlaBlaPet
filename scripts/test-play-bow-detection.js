import SignalAnalysisService from '../src/services/signalAnalysisService.js';

// Simular descripci√≥n objetiva de un Play Bow
const playBowDescription = {
  postura: "El perro est√° inclinado hacia abajo, con el pecho en el suelo y las caderas arriba",
  cola: "La cola est√° movi√©ndose de lado a lado con entusiasmo",
  orejas: "Las orejas est√°n erguidas hacia adelante, mostrando inter√©s",
  ojos: "Los ojos est√°n brillantes y atentos, mirando hacia adelante",
  boca: "La boca est√° ligeramente abierta, mostrando la lengua",
  movimientos: "El perro est√° haciendo movimientos de invitaci√≥n al juego",
  sonidos: "No se observan sonidos visibles"
};

// Simular descripci√≥n objetiva de sumisi√≥n (para comparar)
const submissionDescription = {
  postura: "El perro est√° encogido, con el cuerpo bajo al suelo",
  cola: "La cola est√° entre las piernas, pegada al cuerpo",
  orejas: "Las orejas est√°n hacia atr√°s, pegadas a la cabeza",
  ojos: "Los ojos est√°n semicerrados, evitando el contacto visual",
  boca: "La boca est√° cerrada, tensa",
  movimientos: "El perro est√° quieto, sin movimientos",
  sonidos: "No se observan sonidos visibles"
};

async function testPlayBowDetection() {
  console.log('üß™ Probando detecci√≥n de Play Bow...\n');
  
  const signalService = new SignalAnalysisService();
  
  // Esperar a que se carguen los datos
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  console.log('üìã Descripci√≥n de Play Bow:');
  console.log(JSON.stringify(playBowDescription, null, 2));
  console.log('\nüîç Analizando Play Bow...');
  
  try {
    const playBowResult = await signalService.interpretWithSignalMatrix(playBowDescription);
    console.log('\n‚úÖ Resultado Play Bow:');
    console.log('Emoci√≥n:', playBowResult.emotion);
    console.log('Traducci√≥n:', playBowResult.translation);
    console.log('Confianza:', playBowResult.confidence);
    console.log('Contexto:', playBowResult.context);
  } catch (error) {
    console.error('‚ùå Error analizando Play Bow:', error);
  }
  
  console.log('\n' + '='.repeat(50) + '\n');
  
  console.log('üìã Descripci√≥n de Sumisi√≥n:');
  console.log(JSON.stringify(submissionDescription, null, 2));
  console.log('\nüîç Analizando Sumisi√≥n...');
  
  try {
    const submissionResult = await signalService.interpretWithSignalMatrix(submissionDescription);
    console.log('\n‚úÖ Resultado Sumisi√≥n:');
    console.log('Emoci√≥n:', submissionResult.emotion);
    console.log('Traducci√≥n:', submissionResult.translation);
    console.log('Confianza:', submissionResult.confidence);
    console.log('Contexto:', submissionResult.context);
  } catch (error) {
    console.error('‚ùå Error analizando Sumisi√≥n:', error);
  }
}

// Ejecutar prueba
testPlayBowDetection().catch(console.error);
